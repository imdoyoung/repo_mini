<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.universal.infra.inClaim.InClaimDao">

	<resultMap type="com.universal.infra.inClaim.InClaimDto" id="resultMapObj"></resultMap>
	
<!--========== inClaimAccept ==========-->

	<sql id="inClaimAcceptSelectCommon">
		FROM inclaimaccept AS h
			LEFT JOIN inmember AS c 
				ON h.inMember_inmeSeq = c.inmeSeq
		    LEFT JOIN instaff AS d 
		    	ON h.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
			<if test="shIncaccProType != null and !shIncaccProType.equals('')">AND incaccProType = #{shIncaccProType}</if><!-- 보험상품타입 -->
			<if test="shInmeJobNy != null and !shInmeJobNy.equals('')">AND inmeJobNy = #{shInmeJobNy}</if><!-- 위험직군여부 -->
			<if test="shInmeDiseaseNy != null and !shInmeDiseaseNy.equals('')">AND inmeDiseaseNy = #{shInmeDiseaseNy}</if><!-- 의료수급권자여부 -->
			<if test="shIncaccRequType != null and !shIncaccRequType.equals('')">AND incaccRequType = #{shIncaccRequType}</if><!-- 청구유형 -->
			<if test="shIncaccRequReason != null and !shIncaccRequReason.equals('')">AND incaccRequReason = #{shIncaccRequReason}</if><!-- 청구사유 -->
			<if test="shIncaccSettleRankType != null and !shIncaccSettleRankType.equals('')">AND incaccSettleRankType = #{shIncaccSettleRankType}</if><!-- 보험금수령은행 -->
			<if test="shInstId != null and !shInstId.equals('')">AND instId = #{shInstId}</if><!-- 담당자ID -->
			<if test="shIncaccCompleteNy != null and !shIncaccCompleteNy.equals('')">AND incaccCompleteNy = #{shIncaccCompleteNy}</if><!-- 접수처리완료여부 -->
			<if test="shIncaccDelNy != null and !shIncaccDelNy.equals('')">AND incaccDelNy = #{shIncaccDelNy}</if><!-- 삭제여부 -->
			<!-- 날짜검색 -->
			<choose>
				<when test="shDateOption == 1">AND h.incaccAccDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
				<when test="shDateOption == 2">AND h.incaccRegDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
				<when test="shDateOption == 3">AND h.incaccEdiDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
			</choose>
			<choose>
				<when test="shOption == 1">AND inmeSeq = #{shValue}</when>
				<when test="shOption == 2">AND inmeName LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND inmeGender = #{shValue}</when>
				<when test="shOption == 4">AND inmeTel LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 5">AND instName LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</sql>
	
	<select id="inClaimAcceptSelectOneCount">
		SELECT COUNT(*)
		<include refid="inClaimAcceptSelectCommon"/>
	</select>
	
	<select id="inClaimAcceptSelectList" resultMap="resultMapObj">
		SELECT aa.* FROM(
			SELECT
				h.incaccSeq,
				h.incaccSubmitNo,
				h.incaccProType,
			    c.inmeSeq,
			    c.inmeName,
				c.inmeGender,
			    c.inmeTel,
			    c.inmeIdNumberFr,
			    c.inmeIdNumberBa,
			    c.inmeZipCode,
			    c.inmeAddr,
			    c.inmeAddrDetail,
			    c.inmeEmail,
			    c.inmeJobNy,
			    c.inmeDiseaseNy,
				h.incaccCompleteNy,
				h.incaccRequType,
				h.incaccRequReason,
				h.incaccAccDate,
				h.incaccAccPlace,
				h.incaccAccDesc,
				h.incaccDisease,
				h.incaccSettleRankType,
				h.incaccSettleAcNo,
				h.incaccTosNy,
			    d.instId,
			    d.instName,
				h.incaccRegDate,
				h.incaccEdiDate,
				h.incaccDelNy,
				h.inMember_inmeSeq,
				h.inStaff_instSeq
			<include refid="inClaimAcceptSelectCommon"></include>
			ORDER BY
				h.incaccSeq DESC
		) aa limit #{rowNumToShow} offset #{startRnumForMySql}
	</select>
	
	<insert id="inClaimAcceptInsert">
		INSERT INTO inclaimaccept (
			incaccProType,
			incaccCompleteNy,
			incaccRequType,
			incaccRequReason,
			incaccAccDate,
			incaccAccPlace,
			incaccAccDesc,
			incaccDisease,
			incaccSettleRankType,
			incaccSettleAcNo,
			incaccTosNy,
			incaccRegDate,
			incaccEdiDate,
			incaccDelNy,
			inMember_inmeSeq,
			inStaff_instSeq
		) VALUES (
		    #{incaccProType},
		    1,
		    #{incaccRequType},
		    #{incaccRequReason},
		    #{incaccAccDate},
		    #{incaccAccPlace},
		    #{incaccAccDesc},
		    #{incaccDisease},
		    #{incaccSettleRankType},
		    #{incaccSettleAcNo},
		    #{incaccTosNy},
		    now(),
		    now(),
		    0,
		    #{inMember_inmeSeq},
		    #{inStaff_instSeq}
		)
	</insert>
	
	<select id="inClaimAcceptSelectOne" resultMap="resultMapObj">
		SELECT
			h.incaccSeq,
			h.incaccSubmitNo,
			h.incaccProType,
		    c.inmeSeq,
		    c.inmeName,
			c.inmeGender,
		    c.inmeTel,
		    c.inmeIdNumberFr,
		    c.inmeIdNumberBa,
		    c.inmeZipCode,
		    c.inmeAddr,
		    c.inmeAddrDetail,
		    c.inmeEmail,
		    c.inmeJobNy,
		    c.inmeDiseaseNy,
			h.incaccCompleteNy,
			h.incaccRequType,
			h.incaccRequReason,
			h.incaccAccDate,
			h.incaccAccPlace,
			h.incaccAccDesc,
			h.incaccDisease,
			h.incaccSettleRankType,
			h.incaccSettleAcNo,
			h.incaccTosNy,
		    d.instId,
		    d.instName,
			h.incaccRegDate,
			h.incaccEdiDate,
			h.incaccDelNy,
			h.inMember_inmeSeq,
			h.inStaff_instSeq
		FROM inclaimaccept AS h
			LEFT JOIN inmember AS c 
				ON h.inMember_inmeSeq = c.inmeSeq
		    LEFT JOIN instaff AS d 
		    	ON h.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
			AND h.incaccSeq = #{incaccSeq}
	</select>
	
	<update id="inClaimAcceptUpdate">
		UPDATE inclaimaccept
		SET 
			incaccRequType = #{incaccRequType},
			incaccRequReason = #{incaccRequReason},
			incaccAccDate = #{incaccAccDate},
			incaccAccPlace = #{incaccAccPlace},
			incaccAccDesc = #{incaccAccDesc},
			incaccDisease = #{incaccDisease},
			incaccSettleRankType = #{incaccSettleRankType},
			incaccSettleAcNo = #{incaccSettleRankType},
			incaccEdiDate = now(),
			incaccDelNy = 0
		WHERE 1 = 1
			AND incaccSeq = #{incaccSeq}
	</update>
	
	<update id="inClaimAcceptUelete">
		UPDATE inclaimaccept
		SET
			incaccDelNy = 1
		WHERE 1 = 1
			AND incaccSeq = #{incaccSeq}
	</update>
	
	<delete id="inClaimAcceptDelete">
		DELETE FROM inclaimaccept
		WHERE 1 = 1
			AND incaccSeq = #{incaccSeq}
	</delete>
	
	<!-- accept에 member 연결 -->
	<select id="selectListMember" resultMap="resultMapObj">
		SELECT
			c.inmeSeq,
			c.inmeName
		FROM
			inmember as c
		WHERE 1 = 1
			AND c.inmeDelNy = 0
	</select>
	<!-- accept에 staff 연결 -->
	<select id="selectListStaff" resultMap="resultMapObj">
		SELECT
			d.instSeq,
			d.instName,
			d.instId,
			d.instTel
		FROM
			instaff as d
		WHERE 1 = 1
			AND d.instDelNy = 0
	</select>
	
	
<!--========== inClaimProcess ==========-->

	<sql id="inClaimProcessSelectCommon">
		FROM inclaimprocess AS i
			LEFT JOIN inclaimaccept AS h
				ON i.inclaimaccept_incaccSeq = h.incaccSeq
			LEFT JOIN inmember AS c 
				ON h.inMember_inmeSeq = c.inmeSeq
			LEFT JOIN instaff AS d 
				ON h.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
			<if test="shIncaccSeq != null and !shIncaccSeq.equals('')">AND incaccSeq = #{shIncaccSeq}</if><!-- 접수번호 -->
			<if test="shIncproApproveNy != null and !shIncproApproveNy.equals('')">AND incproApproveNy = #{shIncproApproveNy}</if><!-- 지급승인여부 -->
			<if test="shInmeJobNy != null and !shInmeJobNy.equals('')">AND inmeJobNy = #{shInmeJobNy}</if><!-- 직업위험군여부 -->
			<if test="shInmeDiseaseNy != null and !shInmeDiseaseNy.equals('')">AND inmeDiseaseNy = #{shInmeDiseaseNy}</if><!-- 의료수급자여부 -->
			<if test="shIncaccProType != null and !shIncaccProType.equals('')">AND incaccProType = #{shIncaccProType}</if><!-- 보험상품타입 -->
			<if test="shIncaccRequType != null and !shIncaccRequType.equals('')">AND incaccRequType = #{shIncaccRequType}</if><!-- 청구유형 -->
			<if test="shIncaccRequReason != null and !shIncaccRequReason.equals('')">AND incaccRequReason = #{shIncaccRequReason}</if><!-- 청구사유 -->
			<if test="shIncaccSettleRankType != null and !shIncaccSettleRankType.equals('')">AND incaccSettleRankType = #{shIncaccSettleRankType}</if><!-- 보험금수령은행 -->
			<if test="shInstId != null and !shInstId.equals('')">AND instId = #{shInstId}</if><!-- 담당자ID -->
			<if test="shIncaccCompleteNy != null and !shIncaccCompleteNy.equals('')">AND incaccCompleteNy = #{shIncaccCompleteNy}</if><!-- 접수처리완료여부 -->
			<if test="shIncproDelNy != null and !shIncproDelNy.equals('')">AND incproDelNy = #{shIncproDelNy}</if><!-- 삭제여부 -->
			<!-- 날짜검색 -->
			<choose>
				<when test="shDateOption == 1">AND h.incaccAccDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
				<when test="shDateOption == 2">AND h.incaccRegDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
				<when test="shDateOption == 3">AND h.incaccEdiDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
			</choose>
			<choose>
				<when test="shOption == 1">AND inmeSeq = #{shValue}</when>
				<when test="shOption == 2">AND inmeName LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND inmeGender = #{shValue}</when>
				<when test="shOption == 4">AND inmeTel LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 5">AND instName LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</sql>
	
	<select id="inClaimProcessSelectOneCount">
		SELECT COUNT(*)
		<include refid="inClaimProcessSelectCommon"/>
	</select>
	
	<select id="inClaimProcessSelectList" resultMap="resultMapObj">
		SELECT bb.* FROM(
			SELECT 
				i.incproSeq, 
				h.incaccSeq,
				i.incproApproveNy,
				i.incproRejectReason,
				h.incaccProType,
				c.inmeSeq,
				c.inmeName,
				c.inmeGender,
				c.inmeTel,
				c.inmeIdNumberFr,
				c.inmeIdNumberBa,
				c.inmeZipCode,
				c.inmeAddr,
				c.inmeAddrDetail,
				c.inmeEmail,
				c.inmeJobNy,
				c.inmeDiseaseNy,
				h.incaccRequType,
				h.incaccRequReason,
				h.incaccAccDate,
				h.incaccAccPlace,
				h.incaccAccDesc,
				h.incaccDisease,
				h.incaccSettleRankType,
				h.incaccSettleAcNo,
				h.incaccTosNy,
				d.instId,
				d.instName,
				h.incaccRegDate,
				i.incproEdiDate,
				i.incproCompleteNy,
				i.incproDelNy,
				i.inMember_inmeSeq,
				i.inStaff_instSeq,
				i.inClaimAccept_incaccSeq
				<include refid="inClaimProcessSelectCommon"/>
			ORDER BY 
				i.incproSeq DESC
		) bb limit #{rowNumToShow} offset #{startRnumForMySql}
	</select>
	
	<insert id="inClaimProcessInsert">
		INSERT INTO inclaimprocess (
			incproApproveNy,
			incproRejectReason,
			incproEdiDate,
			incproCompleteNy,
			incproDelNy,
			inClaimAccept_incaccSeq,
			inMember_inmeSeq,
			inStaff_instSeq
		) VALUES (
			#{incproApproveNy},
			#{incproRejectReason},
			now(),
			1,
			0,
			#{inClaimAccept_incaccSeq},
			(SELECT 
				inMember_inmeSeq
			FROM 
				inclaimaccept
			WHERE
				incaccSeq = #{inClaimAccept_incaccSeq}
			),
			(SELECT 
				inStaff_instSeq 
			FROM 
				inclaimaccept 
			WHERE 
				incaccSeq = #{inClaimAccept_incaccSeq}
			)
		)
	</insert>
	
	<select id="inClaimProcessSelectOne" resultMap="resultMapObj">
		SELECT
			i.incproSeq, 
			h.incaccSeq,
			i.incproApproveNy,
			i.incproRejectReason,
			h.incaccProType,
			c.inmeSeq,
			c.inmeName,
			c.inmeGender,
			c.inmeTel,
			c.inmeIdNumberFr,
			c.inmeIdNumberBa,
			c.inmeZipCode,
			c.inmeAddr,
			c.inmeAddrDetail,
			c.inmeEmail,
			c.inmeJobNy,
			c.inmeDiseaseNy,
			h.incaccRequType,
			h.incaccRequReason,
			h.incaccAccDate,
			h.incaccAccPlace,
			h.incaccAccDesc,
			h.incaccDisease,
			h.incaccSettleRankType,
			h.incaccSettleAcNo,
			h.incaccTosNy,
			d.instId,
			d.instName,
			i.incproCompleteNy,
			h.incaccRegDate,
			i.incproEdiDate,
			i.incproCompleteNy,
			i.incproDelNy,
			i.inMember_inmeSeq,
			i.inStaff_instSeq,
			i.inClaimAccept_incaccSeq
		FROM inclaimprocess AS i
			LEFT JOIN inclaimaccept AS h
				ON i.inClaimAccept_incaccSeq = h.incaccSeq
			LEFT JOIN inmember AS c 
				ON h.inMember_inmeSeq = c.inmeSeq
			LEFT JOIN instaff AS d 
				ON i.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
			AND i.incproSeq = #{incproSeq}
	</select>
	
	<update id="inClaimProcessUpdate">
		UPDATE inclaimprocess
		SET
			incproApproveNy = #{incproApproveNy},
			incproRejectReason = #{incproRejectReason},
			incproCompleteNy = #{incproCompleteNy},
			incproEdiDate = now(),
			incproDelNy = 0
		WHERE 1 = 1
			AND incproSeq = #{incproSeq}
	</update>
	
	<update id="inClaimProcessUelete">
		UPDATE inclaimprocess
		SET
			incproDelNy = 1
		WHERE 1 = 1
			AND incproSeq = #{incproSeq}
	</update>
	
	<delete id="inClaimProcessDelete">
		DELETE FROM inclaimprocess
		WHERE 1 = 1
			AND incproSeq = #{incproSeq}
	</delete>

	<!-- process에 accept 연결 -->
	<select id="selectListClaimAccept" resultMap="resultMapObj">
		SELECT
			h.incaccSeq
		FROM
			inclaimaccept as h
		WHERE 1 = 1
			AND h.incaccDelNy = 0
	</select>
	
    <!--========== inClaimpay ==========-->
    
    <sql id="inClaimPaySelectCommon">
    	FROM inclaimpay AS j
			LEFT JOIN inclaimaccept AS h
				ON j.inClaimAccept_incaccSeq = h.incaccSeq
			LEFT JOIN inmember AS c 
				ON j.inMember_inmeSeq = c.inmeSeq
			LEFT JOIN instaff AS d 
				ON j.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
	    	<if test="shIncaccSeq != null and !shIncaccSeq.equals('')">AND incaccSeq = #{shIncaccSeq}</if><!-- 접수번호 -->
	    	<if test="shIncaccSettleRankType != null and !shIncaccSettleRankType.equals('')">AND incaccSettleRankType = #{shIncaccSettleRankType}</if><!-- 보험금수령은행 -->
	    	<if test="shInstId != null and !shInstId.equals('')">AND instId = #{shInstId}</if><!-- 담당자ID -->
	    	<if test="shIncpaySettleNy != null and !shIncpaySettleNy.equals('')">AND incpaySettleNy = #{shIncpaySettleNy}</if><!-- 지급완료여부 -->
			<!-- 날짜검색 -->
			<choose>
				<when test="shDateOption == 1">AND j.incpaySettleDate BETWEEN #{shStartDate} AND #{shEndDate}</when>
			</choose>
			<choose>
				<when test="shOption == 1">AND inmeName LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 2">AND instName LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND instTel LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
    </sql>
    
    <select id="inClaimPaySelectOneCount">
    	SELECT COUNT(*)
		<include refid="inClaimPaySelectCommon"/>
    </select>
    
	<select id="inClaimPaySelectList" resultMap="resultMapObj">
		SELECT cc.* FROM(
			SELECT
				j.incpaySeq,
				h.incaccSeq,
				h.incaccSettleRankType,
				h.incaccSettleAcNo,
				c.inmeName,
				d.instId,
				d.instName,
				d.instTel,
				j.incpaySettleDate, 
				j.incpaySettleNy, 
				j.inClaimAccept_incaccSeq, 
				j.inMember_inmeSeq,
				j.inStaff_instSeq
				<include refid="inClaimPaySelectCommon"/>
				order by   
					incpaySeq desc
			) cc limit #{rowNumToShow} offset #{startRnumForMySql}
	</select>
	
	<insert id="inClaimPayInsert">
		INSERT INTO inclaimpay (
			incpaySettleDate,
			incpaySettleNy,
			inClaimAccept_incaccSeq,
			inMember_inmeSeq,
			inStaff_instSeq
		) VALUES (
			now(),
			0,
			#{inClaimAccept_incaccSeq},
			(SELECT 
				inMember_inmeSeq
			FROM 
				inclaimaccept
			WHERE
				incaccSeq = #{inClaimAccept_incaccSeq}
			),
			(SELECT 
				inStaff_instSeq 
			FROM 
				inclaimaccept 
			WHERE 
				incaccSeq = #{inClaimAccept_incaccSeq}
			)
		)
	</insert>
	
	<select id="inClaimPaySelectOne" resultMap="resultMapObj">
		SELECT
			j.incpaySeq,
			h.incaccSeq,
			h.incaccSettleRankType,
			h.incaccSettleAcNo,
			c.inmeName,
			d.instId,
			d.instName,
			d.instTel,
			j.incpaySettleDate, 
			j.incpaySettleNy, 
			j.inClaimAccept_incaccSeq, 
			j.inMember_inmeSeq,
			j.inStaff_instSeq
		FROM inclaimpay AS j
			LEFT JOIN inclaimaccept AS h
				ON j.inClaimAccept_incaccSeq = h.incaccSeq
			LEFT JOIN inmember AS c 
				ON j.inMember_inmeSeq = c.inmeSeq
			LEFT JOIN instaff AS d 
				ON j.inStaff_instSeq = d.instSeq
		WHERE 1 = 1
			AND incpaySeq = #{incpaySeq}
	</select>
	
	<update id="inClaimPayUpdate">
		UPDATE inclaimpay
		SET
			incpaySettleDate = now(),
			incpaySettleNy = #{incpaySettleNy}
		WHERE 1 = 1
			AND incpaySeq = #{incpaySeq}
	</update>


	
	

	
	
	
	 <!--========== inClaimAssign(클레임배정관리)==========-->
    <sql id="selectCommon">
    	from
			inclaimassign as k
			<!-- inClaimAccept와 연결된 inClaimAccept_incaccSeq 먼저 join -->
			left join inclaimaccept as h on k.inClaimAccept_incaccSeq = h.incaccSeq 
			left join inmember as c on h.inMember_inmeSeq = c.inmeSeq
			left join instaff as d on h.inStaff_instSeq = d.instSeq 
		where 1=1
			<if test="shDelNy != null and !shDelNy.equals('')">AND incassDelNy = #{shDelNy}</if> <!-- 삭제 여부 -->
			<if test="shCompleteDelNy != null and !shCompleteDelNy.equals('')">AND incassCompleteNy = #{shCompleteDelNy}</if> <!-- 클레임완료 여부 -->
			<if test="shAssignNy != null and !shAssignNy.equals('')">AND incassAssignNy = #{shAssignNy}</if> <!-- 배정 현황 -->
			
			<!-- 달력 -->
			<choose>
				<when test="shOptionDate == 1">AND k.incassRegDate BETWEEN #{shDateStart} AND #{shDateEnd}</when> 
				<when test="shOptionDate == 2">AND k.incassEdiDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
				<when test="shOptionDate == 3">AND k.incassAssigndate BETWEEN #{shDateStart} AND #{shDateEnd}</when>   
			</choose>
			 
			<!-- 검색 구분 -->
			<choose> 
				<when test="shOption == 1">AND incassSeq = #{shValue}</when> <!-- 배정관리번호 -->
				<when test="shOption == 2">AND incaccSeq = #{shValue}</when> <!-- 접수번호 -->
				<when test="shOption == 3">AND incassRequType LIKE CONCAT('%',#{shValue},'%')</when> <!-- 청구유형 -->
				<when test="shOption == 4">AND instId LIKE CONCAT('%',#{shValue},'%')</when> <!-- 담당자ID --> 
				<when test="shOption == 5">AND instName LIKE CONCAT('%',#{shValue},'%')</when> <!-- 담당자이름 -->
			</choose>
    </sql>
    
    <select id="selectOneCount">
		select count(*)
		<include refid="selectCommon"/>
	</select>
    
	<select id="inClaimAssignSelectList" resultMap="resultMapObj"> 
		select aa.* from ( 
		select
			k.incassSeq,
			<!-- 청구유형은 클레임 관리/접수에서 가져옴 k.incassRequType  --> 
			k.incassAssigndate,
			k.incassAssignNy,
			k.incassCompleteNy,
			k.incassRegDate,
			k.incassEdiDate,
			k.incassDelNy,
		    h.incaccSeq,
		    h.incaccRequType,
		    d.instName,
		    d.instId,
		    d.instTel,
		    c.inmeName,
		    c.inmeTel,
		    k.inClaimAccept_incaccSeq,
    		k.inMember_inmeSeq,
    		k.inStaff_instSeq
    	<include refid="selectCommon"/>
		order by   
			incassSeq desc
		) aa
		limit #{rowNumToShow} offset #{startRnumForMySql}
	</select>
	
	<insert id="inClaimAssignInsert">        
		INSERT INTO inclaimassign (  
			incassRequType,
			incassCompleteNy,
			incassAssigndate,
			incassAssignNy,
			incassRegDate,
			incassEdiDate,
			incassDelNy,
			inClaimAccept_incaccSeq,
		    inMember_inmeSeq,
		    inStaff_instSeq
		) VALUES (
			#{incassRequType},
			#{incassCompleteNy},
			#{incassAssigndate},
			#{incassAssignNy},
			now(),
			now(),
			0,
			<!-- inClaimAccept_incaccSeq 안에 있는 멤버와 스테프 정보 가져옴 -->
			#{inClaimAccept_incaccSeq},
			<!-- 서브쿼리 -->
			(SELECT 
				inMember_inmeSeq
		     FROM 
		        inClaimAccept
		     WHERE
		        incaccSeq = #{inClaimAccept_incaccSeq}
		     ),
		     (SELECT 
		        inStaff_instSeq 
		     FROM 
		        inClaimAccept 
		     WHERE 
		        incaccSeq = #{inClaimAccept_incaccSeq}
		     )
		     
		)
	</insert>
	
	<select id="inClaimAssignSelectOne" resultMap="resultMapObj">
		select
		    k.incassSeq,
			k.incassRequType,    
			k.incassAssigndate,
			k.incassAssignNy,
			k.incassCompleteNy,
			k.incassRegDate,
			k.incassEdiDate,
			k.incassDelNy,
		    h.incaccSeq,
		    h.incaccRequType,
		    d.instName,
		    d.instId,
		    d.instTel,
		    c.inmeName,
		    c.inmeTel,
		    k.inClaimAccept_incaccSeq,
    		k.inMember_inmeSeq,
    		k.inStaff_instSeq
    	from
    		inclaimassign as k
		<!-- inClaimAccept와 연결된 inClaimAccept_incaccSeq 먼저 join -->
		left join inclaimaccept as h on k.inClaimAccept_incaccSeq = h.incaccSeq 
		left join inmember as c on h.inMember_inmeSeq = c.inmeSeq
		left join instaff as d on h.inStaff_instSeq = d.instSeq 
    	where 1=1 
    		and k.incassSeq = #{incassSeq}       
	</select>
	
	<update id="inClaimAssignUpdate">
		update inclaimassign
		set 
			incassRequType = #{incassRequType},    
			incassAssigndate = #{incassAssigndate},
			incassAssignNy = #{incassAssignNy},
			incassCompleteNy = #{incassCompleteNy},
			incassEdiDate = now(),
			incassDelNy = 0
		where 1=1
			and incassSeq = #{incassSeq}
	</update>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>